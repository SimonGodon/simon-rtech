<?xml version="1.0"?>
<robot name="my_robot" xmlns:xacro="http://ros.org/wiki/xacro">


  <xacro:property name="baserad" value="0.0825" />
  <xacro:property name="baselen" value="0.02" />
  <xacro:property name="wheelrad" value="0.035" />
  <xacro:property name="wheelwidth" value="0.008" />
  <xacro:property name="headwidth" value="0.03" />


  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>

  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>

  <material name="red">
    <color rgba="1 0 0 1"/>
  </material>


  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
  </xacro:macro>


  <link name="base_link">
    <visual>
      <geometry>
        <cylinder length="${baselen}" radius="${baserad}"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${baselen}" radius="${baserad}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.0001735" ixy="0.0" ixz="0.0" iyy="0.00017" iyz="0.0" izz="0.0003403"/>
   </inertial>
  </link>


 <xacro:macro name="wheel" params="prefix reflect">

  <link name="${prefix}_wheel">
    <visual>
      <geometry>
        <cylinder length="${wheelwidth}" radius="${wheelrad}"/>
      </geometry>
      <material name="black"/>
      <origin rpy="${pi/2} 0 0" xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${wheelwidth}" radius="${wheelrad}"/>
      </geometry>
      <origin rpy="${pi/2} 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.015"/>
      <inertia ixx="0.000004674" ixy="0.0" ixz="0.0" iyy="0.000009188" iyz="0.0" izz="0.000004674"/>
   </inertial>
  </link>

  <joint name="base_to_${prefix}_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="${prefix}_wheel"/>
    <axis xyz="0 1 0"/>
    <origin xyz="0 ${reflect*baserad} 0"/>
    <limit effort="30" velocity="1.0"/>
  </joint>

    <!-- This block provides the simulator (Gazebo) with information on a few additional
    physical properties. See http://gazebosim.org/tutorials/?tut=ros_urdf for more-->
    <gazebo reference="${prefix}_wheel">
      <mu1 value="100000"/>
      <mu2 value="3000000"/>
      <kp value="10000000.0" />
      <kd value="100000.0" />
      <material>Gazebo/Grey</material>
    </gazebo>

    <!-- This block connects the wheel joint to an actuator (motor), which informs both
    simulation and visualization of the robot -->
    <transmission name="${prefix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_wheel_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="base_to_${prefix}_wheel">
        <hardwareInterface>VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>



 </xacro:macro>

  <xacro:wheel prefix="left" reflect="1" />
  <xacro:wheel prefix="right" reflect="-1" />


  <link name="head">
    <visual>
      <geometry>
        <box size="${headwidth} ${headwidth} ${headwidth}"/>
      </geometry>
      <material name="blue"/>
      <origin xyz="${headwidth/2} 0 ${headwidth/2}"/>
    </visual>
    <collision>
      <geometry>
        <box size="${headwidth} ${headwidth} ${headwidth}"/>
      </geometry>
      <origin xyz="${headwidth/2} 0 ${headwidth/2}"/>
    </collision>
    <inertial>
      <mass value="0.02"/>
      <inertia ixx="0.000003" ixy="0.0" ixz="0.0" iyy="0.000003" iyz="0.0" izz="0.000003"/>
   </inertial>
  </link>



  <joint name="tohead" type="fixed">
    <parent link="base_link"/>
    <child link="head"/>
    <origin xyz="${baserad-headwidth} 0 ${0.5*baselen}"/>
  </joint>


  <link name="passive_wheel_holder">
    <visual>
      <geometry>
        <cylinder length="${wheelrad-headwidth/2}" radius="${0.5*headwidth}"/>
      </geometry>
      <material name="white"/>
      <origin rpy="0 0 0" xyz="0 0 -${headwidth/2}" />
    </visual>
    <collision>
      <geometry>
        <cylinder length="${wheelrad-headwidth/2}" radius="${wheelrad/2-headwidth/4}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 -${headwidth/2}" />
    </collision>
    <inertial>
      <mass value="0.02"/>
      <inertia ixx="0.0000017917" ixy="0.0" ixz="0.0" iyy="0.0000017917" iyz="0.0" izz="0.00000225"/>
   </inertial>
  </link>

 <joint name="base_to_passive_wheel_holder" type="fixed">
    <parent link="base_link"/>
    <child link="passive_wheel_holder"/>
    <origin xyz="${baserad-headwidth/2} 0 0"/>
  </joint>


  <link name="passive_wheel">
    <visual>
      <geometry>
        <sphere radius="${headwidth/2}"/>
      </geometry>
      <material name="white"/>
      <origin rpy="0 0 0" xyz="0 0 0" />
    </visual>
    <collision>
      <geometry>
        <sphere radius="${headwidth/2}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0" />
    </collision>
    <inertial>
      <mass value="0.02"/>
      <inertia ixx="0.0000018" ixy="0.0" ixz="0.0" iyy="0.0000018" iyz="0.0" izz="0.0000018"/>
   </inertial>
  </link>


    <gazebo reference="passive_wheel">
      <mu1 value="100000"/>
      <mu2 value="100000"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Grey</material>
    </gazebo>


 <joint name="passive_wheel_holder_to_passive_wheel" type="fixed">
    <parent link="passive_wheel_holder"/>
    <child link="passive_wheel"/>
    <origin xyz="0 0 -${wheelrad-headwidth/2}"/>
  </joint>

<link name="base_footprint">
  </link>

 <joint name="footprinttobase" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0 0 ${wheelrad}"/>
  </joint>


  <!-- This block connects the head_swivel joint to an actuator (motor), which informs both
  simulation and visualization of the robot 
  <transmission name="left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="$left_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="base_to_left_wheel">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <transmission name="right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="$right_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="base_to_right_wheel">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>
-->

  <!-- Gazebo plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>


</robot>

